<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>NexT版本更新记录7.8.0 - 8.2.1</title>
    <url>/2021/02/20/NexT%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%957-8-0-8-2-1/</url>
    <content><![CDATA[<p>由于可抗力（Twikoo真香！）因素，搭建博客不到一个月，决定更新主题版本。</p>
<p>版本7.8.0到版本8.2.1最明显的区别，应该就在仓库上了，主题NexT的GIT存储库更改。</p>
<a id="more"></a>

<table>
<thead>
<tr>
<th>版本</th>
<th align="left">年份</th>
<th>仓库</th>
</tr>
</thead>
<tbody><tr>
<td>v5.1.4 或更低</td>
<td align="left">2014 ~ 2017</td>
<td><a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></td>
</tr>
<tr>
<td>v6.0.0 ~ v7.8.0</td>
<td align="left">2018 ~ 2019</td>
<td><a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></td>
</tr>
<tr>
<td>v8.0.0 或更高</td>
<td align="left">2020</td>
<td><a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a></td>
</tr>
</tbody></table>
<h4 id="保存旧版本"><a href="#保存旧版本" class="headerlink" title="保存旧版本"></a>保存旧版本</h4><p>​    备份NexT文件，尤其是两个配置文件，即 <code>hexo/_config.yml</code> 和 <code>hexo/themes/next/_config.yml</code></p>
<h4 id="升级新版本"><a href="#升级新版本" class="headerlink" title="升级新版本"></a>升级新版本</h4><p>​    获取最新更新，执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;next-theme&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure>
<p>​    若是Hexo v5.0及以上，执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-theme-next</span><br></pre></td></tr></table></figure>
<p>v7.8.0时，本博客在<code>hexo/source/_data/next.yml</code>里修改配置，在个性化设置里</p>
<p>更新到v8.2.1后，在<code>next/_config.yml</code>下设置override: false会报WARN，用<code>_config.next.yml</code>文件代替。</p>
<p><img src="/2021/02/20/NexT%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%957-8-0-8-2-1/1613802227726.png" alt="1613802227726"></p>
<p>将<code>next.yml</code>文件剪切并重命名为<code>_config.next.yml</code>。</p>
<p>这时重启localhost，会有一些未转码的字符</p>
<p><img src="/2021/02/20/NexT%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%957-8-0-8-2-1/1613802658053.png" alt="1613802658053"></p>
<p><img src="/2021/02/20/NexT%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%957-8-0-8-2-1/1613802668829.png"></p>
<p><img src="/2021/02/20/NexT%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%957-8-0-8-2-1/1613807104322.png" alt="1613807104322"></p>
<h4 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h4><p>​    将这些自定义的配置进行修改，或者将没必要的删除。使用swig 的语法写过的自定义内容如果报错，且生成的页面为空白，是因为NexT从v7.4.2开始使用 Nunjucks 代替 swig 作为模版引擎，而Nunjucks 只支持 <code>and</code> 运算符，需要替换掉 swig 中的 <code>&amp;&amp;</code>。</p>
<blockquote>
<p>​    Hexo 5.0 版本移除了对于 swig 模版的支持，改为独立的 hexo-renderer-swig 插件。如果使用旧版本的 NexT，并发现 Hexo 生成的 html 中输出了模版源码，不想改模板的话可以选择升级 NexT 或降级 Hexo。</p>
</blockquote>
<p><img src="/2021/02/20/NexT%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%957-8-0-8-2-1/1613808001607.png" alt="1613808001607"></p>
<p>比如<code>source/_data/body_end.swig</code>文件里，设置了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;# 鼠标点击特效 #&#125;</span><br><span class="line">&#123;% if theme.cursor_effect &#x3D;&#x3D; &quot;fireworks&quot; %&#125;</span><br><span class="line">  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;fireworks.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% elseif theme.cursor_effect &#x3D;&#x3D; &quot;explosion&quot; %&#125;</span><br><span class="line">  &lt;canvas class&#x3D;&quot;fireworks&quot; style&#x3D;&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;&#x2F;canvas&gt;</span><br><span class="line">  &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;animejs&#x2F;2.2.0&#x2F;anime.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;explosion.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% elseif theme.cursor_effect &#x3D;&#x3D; &quot;love&quot; %&#125;</span><br><span class="line">  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;love.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% elseif theme.cursor_effect &#x3D;&#x3D; &quot;text&quot; %&#125;</span><br><span class="line">  &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;text.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;# 打字特效 #&#125;</span><br><span class="line">&#123;% if theme.typing_effect %&#125;</span><br><span class="line">  &lt;script src&#x3D;&quot;&#x2F;js&#x2F;activate-power-mode.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    POWERMODE.colorful &#x3D; &#123;&#123; theme.typing_effect.colorful &#125;&#125;;</span><br><span class="line">    POWERMODE.shake &#x3D; &#123;&#123; theme.typing_effect.shake &#125;&#125;;</span><br><span class="line">    document.body.addEventListener(&#39;input&#39;, POWERMODE);</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;# 代码压缩 #&#125;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;&#x2F;js&#x2F;fold_action.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>
<p>更新后，选择将其他代码注释，留下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;canvas class&#x3D;&quot;fireworks&quot; style&#x3D;&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;&#x2F;canvas&gt;</span><br><span class="line"> &lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;animejs&#x2F;2.2.0&#x2F;anime.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"> &lt;script async src&#x3D;&quot;&#x2F;js&#x2F;explosion.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>


<h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p><font color="blue"><a href="https://zhuanlan.zhihu.com/p/163830894">Hexo 和 Next 主题升级</a></font></p>
<p><font color="blue"><a href="https://laytonsun.com/learning/2020-04/upgrade-hexo-and-next.html">升级 Hexo 和 NexT 主题</a></font></p>
<p><font color="blue"><a href="https://jmuava.gitee.io/2021/02/05/Hexo-Next-%E5%8D%9A%E5%AE%A2%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/">个性化设置</a></font></p>
]]></content>
      <tags>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT主题添加Twikoo评论系统</title>
    <url>/2021/02/20/NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Twikoo%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<p><font color="red">NexT主题有三个不同的仓库，许多网络上更改主题的文章教程由于时间问题，没有区分这三个仓库的区别，特别是后两个名称相近的。git clone主题的时候注意仓库位置！！</font></p>
<table>
<thead>
<tr>
<th>版本</th>
<th align="left">年份</th>
<th>仓库</th>
</tr>
</thead>
<tbody><tr>
<td>v5.1.4 或更低</td>
<td align="left">2014 ~ 2017</td>
<td><a href="https://github.com/iissnan/hexo-theme-next">https://github.com/iissnan/hexo-theme-next</a></td>
</tr>
<tr>
<td>v6.0.0 ~ v7.8.0</td>
<td align="left">2018 ~ 2019</td>
<td><a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></td>
</tr>
<tr>
<td>v8.0.0 或更高</td>
<td align="left">2020</td>
<td><a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a></td>
</tr>
</tbody></table>
<a id="more"></a>

<h4 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h4><p>​    Next版本7.8.0，想要引入Twikoo评论系统，但是按照官方文档的步骤走完之后，并不能直接成功，反而提示渲染出错。加入了官方群之后，群里的大佬和iMaeGoo_虹墨大佬给了解决办法（好感动，爱了爱了），先升级版本，NexT v8以上的版本可以正常使用Twikoo。</p>
<p><img src="/2021/02/20/NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Twikoo%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/1613790670277.png" alt="1613790670277"></p>
<p>由于Twikoo评论系统暂时不兼容v7.8.0（2021-2-19），所以决定先更新NexT主题，这时候就发现我使用的是旧仓库了，因为最新的版本是</p>
<p><img src="/2021/02/20/NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Twikoo%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/1613790444876.png" alt="1613790444876"></p>
<p>因此我一直以为v7.8.0是最新版本，直到虹墨大佬说他测过是支持NexT v8.2.1版本时，才发现拉错了仓库(ㄒoㄒ)</p>
<h4 id="引入Twikoo评论系统"><a href="#引入Twikoo评论系统" class="headerlink" title="引入Twikoo评论系统"></a>引入Twikoo评论系统</h4><p>​    有疑问多查看<font color="blue">Twikoo官方文档</font>。</p>
<p>本博客引入Twikoo的步骤：</p>
<ul>
<li>手动部署云函数</li>
</ul>
<p><img src="/2021/02/20/NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Twikoo%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/1613791557756.png" alt="1613791557756"></p>
<ul>
<li>安装Twikoo依赖并添加配置</li>
</ul>
<p><img src="/2021/02/20/NexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0Twikoo%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/1613791647448.png" alt="1613791647448"></p>
<h4 id="管理及优化"><a href="#管理及优化" class="headerlink" title="管理及优化"></a>管理及优化</h4><h4 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h4><p><font color="blue">Twikoo官方文档&lt;/font</font></p>
]]></content>
      <tags>
        <tag>NexT</tag>
        <tag>Twikoo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+NexT 博客个性化配置</title>
    <url>/2021/02/05/Hexo-Next-%E5%8D%9A%E5%AE%A2%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>版本：Hexo - 5.3.0    NexT - 7.8.0 (持续更新)</p>
<p>本博客某些部分基于以下配置生效，防止更新丢失，在此做个记录。</p>
<a id="more"></a>



<p><font color="red"><strong>在配置文件里修改前，最好检查下其中是否有存在要修改的同名配置。 如果存在，将两者配置在一起。</strong></font></p>
<blockquote>
<p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>
<p>为了描述方便，在以下说明中，将前者称为 <strong>站点配置文件</strong>， 后者称为 <strong>主题配置文件</strong>。</p>
</blockquote>
<h4 id="NexT主题版本更新"><a href="#NexT主题版本更新" class="headerlink" title="NexT主题版本更新"></a><font color="red">NexT主题版本更新</font></h4><p>​    本博客搭建的时候使用的NexT版本是7.8.0，在美化主题的时候发现有些教程里的路径如<code>hexo/themes/next/source/css/_custom/custom.styl</code> 是没有的，官方在7.3.0版本更新时推荐采用数据文件，将主题与配置分离，即自定义布局、样式、自定义配置等的代码与主题文件分离。</p>
<ul>
<li><p>将主题配置修改放在<code>hexo/source/_data/next.yml</code>里（_data文件与_post文件同级,没有的话就新建目录，前提是确保NexT版本更新到7.3.0及以上)，这样就不用去修改<code>hexo/themes/next/_config.yml</code>文件，等到NexT再次更新的时候，一些自定义配置就不会因NexT升级而消失，尽量做到平滑升级。</p>
<ol>
<li>在 <code>hexo/source/_data</code> 中新建 <code>next.yml</code> 文件</li>
<li>将 <code>next.yml</code> 中的属性 <code>override</code> 设置为 true</li>
<li>将所有 NexT 主题选项从主题配置文件<code>NexT/_config.yml</code>复制到 <code>hexo/source/_data/next.yml</code> 中</li>
</ol>
</li>
<li><p>将代码放入<code>hexo/source/_data</code>文件夹下，原 <code>hexo/themes/next/source/css/_custom/custom.styl</code> 的配置，现在都放在了<code>hexo/source/_data/styles.styl</code>里，在 NexT 的配置文件 <code>next.yml</code> 中取消 <code>styles.styl</code> 的注释。</p>
</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">custom_file_path:</span><br><span class="line"></span><br><span class="line">-  <span class="comment">#style: source/_data/styles.styl</span></span><br><span class="line">+  style: source/_data/styles.styl <span class="comment">#将style前的#去掉</span></span><br></pre></td></tr></table></figure>
<h4 id="主题颜色"><a href="#主题颜色" class="headerlink" title="主题颜色"></a>主题颜色</h4><p>​    在<code>source/_data</code>目录下的<font color="red"> variables.styl</font>（没有则新增），修改主题颜色。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Colors</span></span><br><span class="line"><span class="comment">// colors for use across theme.</span></span><br><span class="line"><span class="comment">// --------------------------------------------------</span></span><br><span class="line">$black-deep   = #02394e;  //修改主题的颜色</span><br></pre></td></tr></table></figure>
<p>​    还有一些其他的设定可以修改颜色，需要的话可以自行修改。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">$whitesmoke   = #f5f5f5;</span><br><span class="line">$gainsboro    = #eee;  //这个是边栏头像外框的颜色，</span><br><span class="line">$grey-lighter = #ddd;  //文章中插入图片边框颜色</span><br><span class="line">$grey-light   = #ccc;  //文章之间分割线、下划线颜色</span><br><span class="line">$grey         = #bbb;  //页面选中圆点颜色</span><br><span class="line">$grey-dark    = #999;</span><br><span class="line">$grey-dim     = #666;  //侧边栏目录字体颜色</span><br><span class="line">$black-light  = #555;  //修改文章字体颜色</span><br><span class="line">$black-dim    = #333;</span><br><span class="line">$black-deep   = #02394e;  //修改主题的颜色</span><br><span class="line">$red          = #ff2a2a;</span><br><span class="line">$blue-bright  = #87daff;</span><br><span class="line">$blue         = #0684bd;</span><br><span class="line">$blue-deep    = #262a30;</span><br><span class="line">$orange       = #fc6423;   //浏览文章时，目录选中的颜色</span><br></pre></td></tr></table></figure>
<h4 id="界面样式"><a href="#界面样式" class="headerlink" title="界面样式"></a>界面样式</h4><p>​    修改界面显示的样式,设置位置、背景、显示等。</p>
<h4 id="主题背景"><a href="#主题背景" class="headerlink" title="主题背景"></a>主题背景</h4><p>​    在<code>_data/styles.styl</code>里，修改背景图片。图片文件放在<code>blog/source/images</code>路径下。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//背景图片</span></span><br><span class="line">body &#123;</span><br><span class="line">    background:url(/images/whale.jpg);</span><br><span class="line">    background-repeat: no-repeat; <span class="comment">//不重复</span></span><br><span class="line">    background-attachment:fixed; </span><br><span class="line">    background-size: cover;      <span class="comment">//填充</span></span><br><span class="line">    background-position:<span class="number">50</span>% <span class="number">50</span>%; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="设置圆角"><a href="#设置圆角" class="headerlink" title="设置圆角"></a>设置圆角</h4><p>给侧边栏和菜单栏以及文章部分设置圆角，在<code>_data/variables</code>里添加：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 圆角设置</span></span><br><span class="line">$border-radius-inner = 10px 10px 10px 10px;</span><br><span class="line">$border-radius = 10px;</span><br></pre></td></tr></table></figure>
<p>菜单栏和文章的边框有圆角了，还差菜单下的侧边框。在<code>_data/styles.styl</code>里添加：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//侧边框</span></span><br><span class="line">.sidebar &#123;</span><br><span class="line">  border-radius: 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="自定义鼠标点击特效"><a href="#自定义鼠标点击特效" class="headerlink" title="自定义鼠标点击特效"></a>自定义鼠标点击特效</h4><p>​    网上的博客鼠标点击特效常见的有四种：<font color="red">fireworks | explosion | love | text</font></p>
<p>将对应的js文件放到<code>hexo/source/js</code>，然后在<code>source/_data/next.yml</code>里设置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 鼠标点击特效</span></span><br><span class="line"><span class="comment"># mouse click effect: fireworks | explosion | love | text</span></span><br><span class="line">cursor_effect: explosion</span><br></pre></td></tr></table></figure>
<p>由于本博客整体的颜色是蓝色调，为了贴合对点击特效进行了修改。</p>
<p><font color="red">注意：这里颜色的字母要大写</font></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;use strict&quot;</span>;</span><br><span class="line">function updateCoords(e) &#123;</span><br><span class="line">    pointerX = (e.clientX || e.touches[<span class="number">0</span>].clientX) - canvasEl.getBoundingClientRect().left,</span><br><span class="line">    pointerY = e.clientY || e.touches[<span class="number">0</span>].clientY - canvasEl.getBoundingClientRect().top</span><br><span class="line">&#125;</span><br><span class="line">function setParticuleDirection(e) &#123;</span><br><span class="line">    var t = anime.random(<span class="number">0</span>, <span class="number">360</span>) * Math.PI / <span class="number">180</span>,     //圆出现的角度</span><br><span class="line">    a = anime.random(<span class="number">50</span>, <span class="number">180</span>),</span><br><span class="line">    n = [ - <span class="number">1</span>, <span class="number">1</span>][anime.random(<span class="number">0</span>, <span class="number">1</span>)] * a;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        x: e.x + n * Math.cos(t),</span><br><span class="line">        y: e.y + n * Math.sin(t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function createParticule(e, t) &#123;</span><br><span class="line">    var a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.x = e,</span><br><span class="line">    a.y = t,</span><br><span class="line">    a.color = colors[anime.random(<span class="number">0</span>, colors.length - <span class="number">1</span>)],</span><br><span class="line">    a.radius = anime.random(<span class="number">16</span>, <span class="number">32</span>),</span><br><span class="line">    a.endPos = setParticuleDirection(a),</span><br><span class="line">    a.draw = function() &#123;</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * Math.PI, !<span class="number">0</span>),</span><br><span class="line">        ctx.fillStyle = a.color,</span><br><span class="line">        ctx.fill()</span><br><span class="line">    &#125;,</span><br><span class="line">    a</span><br><span class="line">&#125;</span><br><span class="line">function createCircle(e, t) &#123;</span><br><span class="line">    var a = &#123;&#125;;</span><br><span class="line">    <span class="keyword">return</span> a.x = e,</span><br><span class="line">    a.y = t,</span><br><span class="line">    a.color = <span class="string">&quot;#1E92FB&quot;</span>,          //线圈的颜色</span><br><span class="line">    a.radius = <span class="number">.1</span>,</span><br><span class="line">    a.alpha = <span class="number">.5</span>,</span><br><span class="line">    a.lineWidth = <span class="number">3</span>,</span><br><span class="line">    a.draw = function() &#123;</span><br><span class="line">        ctx.globalAlpha = a.alpha,</span><br><span class="line">        ctx.beginPath(),</span><br><span class="line">        ctx.arc(a.x, a.y, a.radius, <span class="number">0</span>, <span class="number">2</span> * Math.PI, !<span class="number">0</span>),</span><br><span class="line">        ctx.lineWidth = a.lineWidth,</span><br><span class="line">        ctx.strokeStyle = a.color,</span><br><span class="line">        ctx.stroke(),</span><br><span class="line">        ctx.globalAlpha = <span class="number">1</span></span><br><span class="line">    &#125;,</span><br><span class="line">    a</span><br><span class="line">&#125;</span><br><span class="line">function renderParticule(e) &#123;</span><br><span class="line">    <span class="keyword">for</span> (var t = <span class="number">0</span>; t &lt; e.animatables.length; t++) e.animatables[t].target.draw()</span><br><span class="line">&#125;</span><br><span class="line">function animateParticules(e, t) &#123;</span><br><span class="line">    <span class="keyword">for</span> (var a = createCircle(e, t), n = [], i = <span class="number">0</span>; i &lt; numberOfParticules; i++) n.push(createParticule(e, t));</span><br><span class="line">    anime.timeline().add(&#123;</span><br><span class="line">        targets: n,</span><br><span class="line">        x: function(e) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.endPos.x</span><br><span class="line">        &#125;,</span><br><span class="line">        y: function(e) &#123;</span><br><span class="line">            <span class="keyword">return</span> e.endPos.y</span><br><span class="line">        &#125;,</span><br><span class="line">        radius: <span class="number">.1</span>,</span><br><span class="line">        duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">        easing: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">        update: renderParticule</span><br><span class="line">    &#125;).add(&#123;</span><br><span class="line">        targets: a,</span><br><span class="line">        radius: anime.random(<span class="number">80</span>, <span class="number">160</span>),</span><br><span class="line">        lineWidth: <span class="number">0</span>,</span><br><span class="line">        alpha: &#123;</span><br><span class="line">            value: <span class="number">0</span>,</span><br><span class="line">            easing: <span class="string">&quot;linear&quot;</span>,</span><br><span class="line">            duration: anime.random(<span class="number">600</span>, <span class="number">800</span>)</span><br><span class="line">        &#125;,</span><br><span class="line">        duration: anime.random(<span class="number">1200</span>, <span class="number">1800</span>),</span><br><span class="line">        easing: <span class="string">&quot;easeOutExpo&quot;</span>,</span><br><span class="line">        update: renderParticule,</span><br><span class="line">        offset: <span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">function debounce(e, t) &#123;</span><br><span class="line">    var a;</span><br><span class="line">    <span class="keyword">return</span> function() &#123;</span><br><span class="line">        var n = this,</span><br><span class="line">        i = arguments;</span><br><span class="line">        clearTimeout(a),</span><br><span class="line">        a = setTimeout(function() &#123;</span><br><span class="line">            e.apply(n, i)</span><br><span class="line">        &#125;,</span><br><span class="line">        t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var canvasEl = document.querySelector(<span class="string">&quot;.fireworks&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (canvasEl) &#123;</span><br><span class="line">    var ctx = canvasEl.getContext(<span class="string">&quot;2d&quot;</span>),</span><br><span class="line">    numberOfParticules = <span class="number">5</span>,   //点击的圆数量</span><br><span class="line">    pointerX = <span class="number">0</span>,</span><br><span class="line">    pointerY = <span class="number">0</span>,</span><br><span class="line">    tap = <span class="string">&quot;mousedown&quot;</span>,</span><br><span class="line">    colors = [<span class="string">&quot;#447C8C&quot;</span>, <span class="string">&quot;#024E66&quot;</span>, <span class="string">&quot;#387A91&quot;</span>, <span class="string">&quot;#86D8FF&quot;</span>, <span class="string">&quot;#DDEAEF&quot;</span>],//随机出现的颜色</span><br><span class="line">    setCanvasSize = debounce(function() &#123;</span><br><span class="line">        canvasEl.width = <span class="number">2</span> * window.innerWidth,</span><br><span class="line">        canvasEl.height = <span class="number">2</span> * window.innerHeight,</span><br><span class="line">        canvasEl.style.width = window.innerWidth + <span class="string">&quot;px&quot;</span>,</span><br><span class="line">        canvasEl.style.height = window.innerHeight + <span class="string">&quot;px&quot;</span>,</span><br><span class="line">        canvasEl.getContext(<span class="string">&quot;2d&quot;</span>).scale(<span class="number">2</span>, <span class="number">2</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">500</span>),</span><br><span class="line">    render = anime(&#123;</span><br><span class="line">        duration: <span class="number">1</span> / <span class="number">0</span>,</span><br><span class="line">        update: function() &#123;</span><br><span class="line">            ctx.clearRect(<span class="number">0</span>, <span class="number">0</span>, canvasEl.width, canvasEl.height)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    document.addEventListener(tap,</span><br><span class="line">    function(e) &#123;</span><br><span class="line">        <span class="string">&quot;sidebar&quot;</span> !== e.target.<span class="built_in">id</span> &amp;&amp; <span class="string">&quot;toggle-sidebar&quot;</span> !== e.target.<span class="built_in">id</span> &amp;&amp; <span class="string">&quot;A&quot;</span> !== e.target.nodeName &amp;&amp; <span class="string">&quot;IMG&quot;</span> !== e.target.nodeName &amp;&amp; (render.play(), updateCoords(e), animateParticules(pointerX, pointerY))</span><br><span class="line">    &#125;,</span><br><span class="line">    !<span class="number">1</span>),</span><br><span class="line">    setCanvasSize(),</span><br><span class="line">    window.addEventListener(<span class="string">&quot;resize&quot;</span>, setCanvasSize, !<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="网页显示logo"><a href="#网页显示logo" class="headerlink" title="网页显示logo"></a>网页显示logo</h4><p>将图片放在<code>hexo/source/images</code>，将图片的名称改为 <font color="red">favicon.ico</font>，同时在<code>next.yml</code>里设置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Site Information Settings</span></span><br><span class="line"><span class="comment"># See: https://theme-NexT.org/docs/getting-started/</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">favicon:</span><br><span class="line">  small: /images/favicon.ico</span><br><span class="line">  medium: /images/favicon.ico</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-NexT.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br></pre></td></tr></table></figure>
<h4 id="mac主题的代码块风格"><a href="#mac主题的代码块风格" class="headerlink" title="mac主题的代码块风格"></a>mac主题的代码块风格</h4><p>7.8.0版本的NexT主题已经支持mac风格的代码块设置，在<code>next.yml</code>搜索 <font color="red">codeblock</font> 设置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  <span class="comment"># Code Highlight theme</span></span><br><span class="line">  <span class="comment"># Available values: normal | night | night eighties | night blue | night bright | solarized | solarized dark | galactic</span></span><br><span class="line">  <span class="comment"># See: https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line"></span><br><span class="line">  highlight_theme: solarized dark <span class="comment">#支持以上八种主题，为了更加贴近背景，我选择了solarized dark</span></span><br><span class="line">        </span><br><span class="line">  <span class="comment"># Add copy button on codeblock</span></span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true <span class="comment"># 增加复制按钮的开关</span></span><br><span class="line">    <span class="comment"># Show text copy result.</span></span><br><span class="line">    show_result: true<span class="comment"># 点击复制完后是否显示 复制成功 结果提示</span></span><br><span class="line">    <span class="comment"># Available values: default | flat | mac</span></span><br><span class="line">    style: mac</span><br></pre></td></tr></table></figure>
<h4 id="文章加密"><a href="#文章加密" class="headerlink" title="文章加密"></a>文章加密</h4><p>引入依赖：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt </span><br></pre></td></tr></table></figure>
<p>在<strong>站点配置文件</strong>中添加配置：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Security</span></span><br><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br><span class="line">  abstract: 加密文档，请提升权限（要办卡吗这位朋友~）</span><br><span class="line">  message: 点我输入密码~</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: tagName, password: 密码A&#125;</span><br><span class="line">  - &#123;name: tagName, password: 密码B&#125;</span><br><span class="line">  theme: xray</span><br><span class="line">  wrong_pass_message: 密码不太对, 还差一点</span><br><span class="line">  wrong_hash_message: 没有校验, 勉强开放好了  </span><br></pre></td></tr></table></figure>
<h4 id="首页文章显示长度"><a href="#首页文章显示长度" class="headerlink" title="首页文章显示长度"></a>首页文章显示长度</h4><h4 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h4><p><font color="blue"><a href>Hexo-NexT主题配置</a></font></p>
<p><font color="blue">【Hexo-NexT 版本更新记录】</font></p>
<p><font color="blue">【数据文件】</font></p>
<p><font color="blue">【NexT官方文档】</font></p>
]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>RUOYI-Vue-SpringBoot: 对拼接的list进行分页操作</title>
    <url>/2021/02/04/RUOYI-Vue-SpringBoot-%E5%AF%B9%E6%8B%BC%E6%8E%A5%E7%9A%84list%E8%BF%9B%E8%A1%8C%E5%88%86%E9%A1%B5%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h5 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h5><p>若依框架封装的 startPage() 方法只对该语句以后的第一个查询（Select）语句得到的数据进行分页。<br>而现在的需求是要对查询到以后进行拼接或筛选的list数据进行分页操作并在前端展示。</p>
<a id="more"></a>

<p>在git上有关于这个的提问 <a href="https://www.csdn.net/">link</a>.<a href="https://gitee.com/y_project/RuoYi-Vue/issues/I1GI52">https://gitee.com/y_project/RuoYi-Vue/issues/I1GI52</a><br>若依大佬简单说了解决办法，在此进行详细的补充<br><img src="/2021/02/04/RUOYI-Vue-SpringBoot-%E5%AF%B9%E6%8B%BC%E6%8E%A5%E7%9A%84list%E8%BF%9B%E8%A1%8C%E5%88%86%E9%A1%B5%E6%93%8D%E4%BD%9C/20210121150229579.png" alt="在这里插入图片描述"></p>
<h5 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h5><p>从startPage()点进去<br><img src="/2021/02/04/RUOYI-Vue-SpringBoot-%E5%AF%B9%E6%8B%BC%E6%8E%A5%E7%9A%84list%E8%BF%9B%E8%A1%8C%E5%88%86%E9%A1%B5%E6%93%8D%E4%BD%9C/20210121150634649.png" alt="在这里插入图片描述"><br>这里的pageNum和pageSize是从前端数据里传进来的分页对象的属性<br><img src="/2021/02/04/RUOYI-Vue-SpringBoot-%E5%AF%B9%E6%8B%BC%E6%8E%A5%E7%9A%84list%E8%BF%9B%E8%A1%8C%E5%88%86%E9%A1%B5%E6%93%8D%E4%BD%9C/20210121150857124.png" alt="在这里插入图片描述"><br><img src="/2021/02/04/RUOYI-Vue-SpringBoot-%E5%AF%B9%E6%8B%BC%E6%8E%A5%E7%9A%84list%E8%BF%9B%E8%A1%8C%E5%88%86%E9%A1%B5%E6%93%8D%E4%BD%9C/20210121150835440.png" alt="在这里插入图片描述"><br>然后对数据进行处理，当固定每页10条数据时：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> TableDataInfo <span class="title">list</span><span class="params">(TestDto testDto)</span> </span>&#123;</span><br><span class="line">       PageDomain pageDomain = TableSupport.buildPageRequest();</span><br><span class="line">       Integer pageNum = pageDomain.getPageNum();</span><br><span class="line">       Integer pageSize = pageDomain.getPageSize();</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//获取到处理好的list集合</span></span><br><span class="line">       List&lt;TestDto&gt; result= sysTestService.selectSysTestList(testDto);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">int</span> num = result.size();</span><br><span class="line">       result = result.stream()</span><br><span class="line">       		.skip((pageNum - <span class="number">1</span>) * pageSize)</span><br><span class="line">       		.limit(pageSize)</span><br><span class="line">       		.collect(Collectors.toList());</span><br><span class="line">       TableDataInfo rspData = <span class="keyword">new</span> TableDataInfo();</span><br><span class="line">       rspData.setCode(HttpStatus.SUCCESS);</span><br><span class="line">       rspData.setRows(result);</span><br><span class="line">       rspData.setTotal(num);</span><br><span class="line">       <span class="keyword">return</span> rspData;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>springBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA里的vue项目iframe（HTML项目）同域连接步骤</title>
    <url>/2021/02/04/IDEA%E9%87%8C%E7%9A%84vue%E9%A1%B9%E7%9B%AEiframe%EF%BC%88HTML%E9%A1%B9%E7%9B%AE%EF%BC%89%E5%90%8C%E5%9F%9F%E8%BF%9E%E6%8E%A5%E6%AD%A5%E9%AA%A4/</url>
    <content><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<div id="hbe-security">
  <div class="hbe-input-container">
  <input type="password" class="hbe-form-control" id="pass" placeholder="Please enter the password to read the blog." />
    <label for="pass">Please enter the password to read the blog.</label>
    <div class="bottom-line"></div>
  </div>
</div>
<div id="decryptionError" style="display: none;">Incorrect Password!</div>
<div id="noContentError" style="display: none;">No content to display!</div>
<div id="encrypt-blog" style="display:none">

</div>
<script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>vue</tag>
        <tag>iframe</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>开始记录Blog</title>
    <url>/2021/01/26/%E5%BC%80%E5%A7%8Bblog%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>学无止境</p>
]]></content>
  </entry>
</search>
